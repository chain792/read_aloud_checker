version: 2.1

orbs:
  ruby: circleci/ruby@1.4.0

jobs:
  build_api:
    docker:
      - image: cimg/ruby:3.1.2
        environment:
          BUNDLER_VERSION: 2.3.7
    working_directory: ~/read_aloud_checker/api
    steps:
      - checkout:
          path: ~/read_aloud_checker
      - ruby/install-deps

  test_api:
    docker:
      - image: cimg/ruby:3.1.2
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: mysqlpassword
          MYSQL_DATABASE: app_test
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    working_directory: ~/read_aloud_checker/api
    steps:
      - checkout:
          path: ~/read_aloud_checker
      - ruby/install-deps
      - run:
          name: Database setup
          command: bundle exec rails db:migrate
      - run:
          name: test
          command: bundle exec rspec

  test_front:
    docker:
      - image: cimg/node:16.16.0
    working_directory: ~/read_aloud_checker/front
    steps:
      - checkout:
          path: ~/read_aloud_checker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "~/read_aloud_checker/front/package.json" }}
          working_directory: ~/read_aloud_checker/front
      - run:
          name: install-packages
          command: npm install
          working_directory: ~/read_aloud_checker/front
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "~/read_aloud_checker/front/package.json" }}
          working_directory: ~/read_aloud_checker/front
      - run:
          name: test
          command: npm run test
          working_directory: ~/read_aloud_checker/front



  # deploy:
  #   docker:
  #     - image: circleci/ruby:2.5.1-node-browsers
  #       environment:
  #         BUNDLER_VERSION: 2.1.4
  #   steps:
  #     - checkout
  #     - ruby/install-deps
  #     - add_ssh_keys:
  #         fingerprints: "XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX"
  #     - deploy:
  #         name: Capistrano deploy
  #         command: bundle exec cap production deploy

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build_api
      - test_api:
          requires:
            - build_api
      - test_front
      # - deploy:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: master